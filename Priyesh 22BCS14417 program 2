import java.util.*;

public class SkylineProblem {
    public List<int[]> getSkyline(int[][] buildings) {
        List<int[]> result = new ArrayList<>();
        List<int[]> heights = new ArrayList<>();
        

        for (int[] b : buildings) {
            heights.add(new int[]{b[0], -b[2]});
            heights.add(new int[]{b[1], b[2]});
        }
        Collections.sort(heights, (a, b) -> {
            if (a[0] != b[0]) return a[0] - b[0];
            return a[1] - b[1];
        });
        PriorityQueue<Integer> pq = new PriorityQueue<>((a, b) -> b - a);
        pq.offer(0);
        int prevHeight = 0;
        for (int[] h : heights) {
            if (h[1] < 0) {
                pq.offer(-h[1]);
            } else {
                pq.remove(h[1]);
            }
            int currHeight = pq.peek();
            if (currHeight != prevHeight) {
                result.add(new int[]{h[0], currHeight});
                prevHeight = currHeight;
            }
        }
        return result;
    }

    public static void main(String[] args) {
        SkylineProblem sp = new SkylineProblem();
        int[][] buildings = {{2, 9, 10}, {3, 7, 15}, {5, 12, 12}, {15, 20, 10}, {19, 24, 8}};
        List<int[]> skyline = sp.getSkyline(buildings);

        for (int[] point : skyline) {
            System.out.println(Arrays.toString(point));
        }
    }
}
